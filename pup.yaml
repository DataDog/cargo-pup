#
# Example rules for the test_name namespace that should
# always fire to show we're working. This is
# a namespace we throw into our build just so that running
# `cargo pup` on ourselves always produces some output!
# 
test_me_namespace_rule:
  type: namespace_usage
  name: "test_me_namespace_rule"
  namespaces:
    - "example::.*"
  rules:
    - type: Deny
      denied_namespaces:
        - "std::collections"
      severity: Info
    - type: RequireEmptyMod 
      severity: Info

test_me_function_length_rule:
  type: function_length
  namespace: example::.*
  max_lines: 10
  severity: Info
    
#
# Rules for this project, cargo-pup.
#

# Implementations of our lint rules ... 
architecture_lint_rules:
  type: trait_impl
  source_name: "lints::ArchitectureLintRule"
  # Must be named consistently
  name_must_match: ".*LintProcessor$"
  # ... and must be public
  enforce_visibility: "Public"
  severity: Error

# Implementations of our lint factories
configuration_factories:
  type: trait_impl
  source_name: "utils::configuration_factory::LintFactory"
  # ... must be named consistently
  name_must_match: ".*LintFactory$"
  # ... and must be private
  enforce_visibility: "Private"
  severity: Error

# Our namespaces that follow the mod.rs structure
# must be empty. That is, they should only contain nested
# module references, uses, and re-exports 
empty_mods:
  type: namespace_usage
  namespaces:
    - "lints"
    - "utils"
  rules:
    - type: RequireEmptyMod
      severity: Warn

