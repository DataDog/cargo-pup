#
# Rules for this project, cargo-pup.
#

# Implementations of our lint rules ... 
architecture_lint_rules:
  type: trait_impl
  source_name: "lints::architecture_lint_rule::ArchitectureLintRule"
  # Must be named consistently
  name_must_match: ".*LintProcessor$"
  # ... and must be public
  enforce_visibility: "Private"
  severity: Error

# Implementations of our lint factories
configuration_factories:
  type: trait_impl
  source_name: "utils::configuration_factory::LintFactory"
  # ... must be named consistently
  name_must_match: ".*LintFactory$"
  # ... and must be private
  enforce_visibility: "Private"
  severity: Error

# Our namespaces that follow the mod.rs structure
# must be empty. That is, they should only contain nested
# module references, uses, and re-exports
empty_mods:
  type: empty_mod
  modules:
    - "lints"
    - "utils"
    - "^cargo_pup"
  severity: Warn

# Keep helpers implementation details private
helpers_no_structs_or_traits:
  type: item_type
  modules:
    - "^pup_driver::lints::helpers$"
  denied_items:
    - struct  
    - trait 
  severity: Error

utils_no_structs_or_traits:
  type: item_type
  modules:
    - "^pup_driver::utils$"
  denied_items:
    - struct
    - trait 
  severity: Error

# Ensure correct Result error types across the project
enforce_result_error:
  type: result_error
  modules:
    - "^cargo_pup"
    - "^pup_driver"
  severity: Error
