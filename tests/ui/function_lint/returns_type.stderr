error: Function exceeds maximum length of 1 lines with 3 lines
  --> tests/ui/function_lint/returns_type.rs:9:1
   |
LL | fn test_result_simple() -> Result<(), i32> {
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'result_return_type_test'.
   = note: `-D function-lint` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(function_lint)]`

error: Function exceeds maximum length of 1 lines with 3 lines
  --> tests/ui/function_lint/returns_type.rs:14:1
   |
LL | fn test_result_custom_error() -> Result<String, MyError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'result_return_type_test'.

error: Function exceeds maximum length of 1 lines with 3 lines
  --> tests/ui/function_lint/returns_type.rs:21:1
   |
LL | fn test_option_simple() -> Option<i32> {
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'option_return_type_test'.

error: Function exceeds maximum length of 1 lines with 3 lines
  --> tests/ui/function_lint/returns_type.rs:26:1
   |
LL | fn test_option_string() -> Option<String> {
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'option_return_type_test'.

error: Function exceeds maximum length of 1 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:33:1
   |
LL | fn test_custom_type_function() -> CustomType {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'custom_type_return_test'.

error: Function exceeds maximum length of 1 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:40:1
   |
LL | fn test_my_error_function() -> MyError {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'my_error_return_test'.

error: Function exceeds maximum length of 1 lines with 6 lines
  --> tests/ui/function_lint/returns_type.rs:49:1
   |
LL | fn test_vec_integers() -> Vec<i32> {
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'vec_return_type_test'.

error: Function exceeds maximum length of 1 lines with 6 lines
  --> tests/ui/function_lint/returns_type.rs:57:1
   |
LL | fn test_vec_strings() -> Vec<String> {
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'vec_return_type_test'.

error: Function exceeds maximum length of 2 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:68:5
   |
LL |     pub fn module_result_function() -> Result<(), i32> { 
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'module_based_function_length_test'.
   = note: `#[deny(function_lint)]` on by default

error: Function exceeds maximum length of 1 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:68:5
   |
LL |     pub fn module_result_function() -> Result<(), i32> { 
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'module_result_test'.

error: Function exceeds maximum length of 2 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:75:5
   |
LL |     pub fn module_option_function() -> Option<i32> { 
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'module_based_function_length_test'.

error: Function exceeds maximum length of 1 lines with 5 lines
  --> tests/ui/function_lint/returns_type.rs:75:5
   |
LL |     pub fn module_option_function() -> Option<i32> { 
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'module_option_test'.

error: aborting due to 12 previous errors

