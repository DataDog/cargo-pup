warning: Item 'DisallowedInModRs' disallowed in mod.rs due to empty-mod-file policy
  --> src/empty_mod_file/mod.rs:10:1
   |
10 | / pub struct DisallowedInModRs {
11 | |     field: String,
12 | | }
   | |_^
   |
   = help: Remove this item from the mod.rs file or move it to a submodule
   = note: Applied by cargo-pup rule 'must_have_empty_mod_file'.
   = note: `#[warn(module_must_have_empty_mod_file)]` on by default

warning: Item 'disallowed_function' disallowed in mod.rs due to empty-mod-file policy
  --> src/empty_mod_file/mod.rs:15:1
   |
15 | / pub fn disallowed_function() -> i32 {
16 | |     println!("This function should not be directly in mod.rs");
17 | |     42
18 | | }
   | |_^
   |
   = help: Remove this item from the mod.rs file or move it to a submodule
   = note: Applied by cargo-pup rule 'must_have_empty_mod_file'.

warning: Function exceeds maximum length of 5 lines with 8 lines
 --> src/function_length/mod.rs:7:1
  |
7 | pub fn free_function_too_long() -> i32 {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: Consider breaking this function into smaller parts
  = note: Applied by cargo-pup rule 'function_length_check'.
  = note: `#[warn(function_lint)]` on by default

warning: Function exceeds maximum length of 5 lines with 8 lines
  --> src/function_length/mod.rs:23:5
   |
23 |     fn impl_function_too_long() -> i32 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'function_length_check'.

warning: module 'item_type' is not allowed in this module
 --> src/main.rs:9:1
  |
9 | mod item_type;
  | ^^^^^^^^^^^^^^
  |
  = help: Consider moving this item to a different module
  = note: Applied by cargo-pup rule 'item_type_restrictions'.
  = note: `#[warn(module_denied_items)]` on by default

warning: struct 'DeniedStruct' is not allowed in this module
 --> src/item_type/mod.rs:4:1
  |
4 | / pub struct DeniedStruct {
5 | |     field: String,
6 | | }
  | |_^
  |
  = help: Consider moving this item to a different module
  = note: Applied by cargo-pup rule 'item_type_restrictions'.

warning: enum 'DeniedEnum' is not allowed in this module
  --> src/item_type/mod.rs:8:1
   |
8  | / pub enum DeniedEnum {
9  | |     Variant1,
10 | |     Variant2,
11 | | }
   | |_^
   |
   = help: Consider moving this item to a different module
   = note: Applied by cargo-pup rule 'item_type_restrictions'.

warning: trait 'DeniedTrait' is not allowed in this module
  --> src/item_type/mod.rs:13:1
   |
13 | / pub trait DeniedTrait {
14 | |     fn some_method(&self);
15 | | }
   | |_^
   |
   = help: Consider moving this item to a different module
   = note: Applied by cargo-pup rule 'item_type_restrictions'.

warning: module 'nested' is not allowed in this module
  --> src/item_type/mod.rs:25:1
   |
25 | / pub mod nested {
...  |
28 | | } 
   | |_^
   |
   = help: Consider moving this item to a different module
   = note: Applied by cargo-pup rule 'item_type_restrictions'.

warning: Wildcard imports are not allowed
 --> src/module_usage/mod.rs:5:1
  |
5 | use std::io::*;
  | ^^^^^^^^^^^^^^^
  |
  = help: Import specific items instead of using a wildcard
  = note: Applied by cargo-pup rule 'module_usage'.
  = note: `#[warn(module_wildcard_import)]` on by default

warning: Use of module 'std::collections::HashMap' is denied
 --> src/module_usage/mod.rs:3:1
  |
3 | use std::collections::HashMap;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: Remove this import
  = note: Applied by cargo-pup rule 'module_usage'.
  = note: `#[warn(module_restrict_imports)]` on by default

warning: Item 'this_should_not_be_here' not allowed in empty module
 --> src/must_be_empty.rs:6:1
  |
6 | / pub fn this_should_not_be_here() {
7 | |     println!("This function violates the MustBeEmpty lint rule");
8 | | }
  | |_^
  |
  = help: Remove this item from the module, which must be empty
  = note: Applied by cargo-pup rule 'must_be_empty_module'.
  = note: `#[warn(module_must_be_empty)]` on by default

warning: Item 'ALSO_NOT_ALLOWED' not allowed in empty module
  --> src/must_be_empty.rs:10:1
   |
10 | pub const ALSO_NOT_ALLOWED: &str = "This const also violates the MustBeEmpty rule"; 
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Remove this item from the module, which must be empty
   = note: Applied by cargo-pup rule 'must_be_empty_module'.

warning: Error type 'i32' in Result does not implement Error trait
  --> src/result_error/mod.rs:16:1
   |
16 | pub fn bad_result() -> Result<String, i32> {
   | ^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'result_type_check'.

warning: Error type 'result_error::CustomError' in Result does not implement Error trait
  --> src/result_error/mod.rs:25:1
   |
25 | pub fn custom_error_result() -> Result<String, CustomError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'result_type_check'.

warning: Error type 'i32' in Result does not implement Error trait
  --> src/result_error/mod.rs:74:1
   |
74 | pub fn bad_anyhow_usage() -> Result<String, i32> {
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'result_type_check'.

warning: Struct must match pattern '.*MyTraitImpl$', found 'MyBadlyNamedThing'
  --> src/trait_impl/mod.rs:17:1
   |
17 | pub struct MyBadlyNamedThing {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Rename this struct to match the pattern '.*MyTraitImpl$'
   = note: Applied by cargo-pup rule 'trait_restrictions'.
   = note: `#[warn(struct_lint_must_be_named)]` on by default

warning: Struct 'MyBadlyNamedThing' is public, but must be private
  --> src/trait_impl/mod.rs:17:1
   |
17 | pub struct MyBadlyNamedThing {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Remove the 'pub' visibility modifier
   = note: Applied by cargo-pup rule 'trait_restrictions'.
   = note: `#[warn(struct_lint_must_be_private)]` on by default

warning: `test_app` (bin "test_app") generated 18 warnings
