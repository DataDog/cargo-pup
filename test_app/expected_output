warning: Function exceeds maximum length of 5 lines with 8 lines
 --> src/function_length/mod.rs:5:1
  |
5 | pub fn free_function_too_long() -> i32 {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: Consider breaking this function into smaller parts
  = note: Applied by cargo-pup rule 'function_lint'.
  = note: `#[warn(function_lint)]` on by default

warning: Function exceeds maximum length of 5 lines with 8 lines
  --> src/function_length/mod.rs:21:5
   |
21 |     fn impl_function_too_long() -> i32 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider breaking this function into smaller parts
   = note: Applied by cargo-pup rule 'function_lint'.

warning: module 'item_type' is not allowed in this module
 --> src/main.rs:6:1
  |
6 | mod item_type;
  | ^^^^^^^^^^^^^^
  |
  = help: Consider moving this item to a different module
  = note: Applied by cargo-pup rule 'module_lint'.
  = note: `#[warn(module_denied_items_lint)]` on by default

warning: struct 'DeniedStruct' is not allowed in this module
 --> src/item_type/mod.rs:2:1
  |
2 | / pub struct DeniedStruct {
3 | |     field: String,
4 | | }
  | |_^
  |
  = help: Consider moving this item to a different module
  = note: Applied by cargo-pup rule 'module_lint'.

warning: enum 'DeniedEnum' is not allowed in this module
 --> src/item_type/mod.rs:6:1
  |
6 | / pub enum DeniedEnum {
7 | |     Variant1,
8 | |     Variant2,
9 | | }
  | |_^
  |
  = help: Consider moving this item to a different module
  = note: Applied by cargo-pup rule 'module_lint'.

warning: trait 'DeniedTrait' is not allowed in this module
  --> src/item_type/mod.rs:11:1
   |
11 | / pub trait DeniedTrait {
12 | |     fn some_method(&self);
13 | | }
   | |_^
   |
   = help: Consider moving this item to a different module
   = note: Applied by cargo-pup rule 'module_lint'.

warning: module 'nested' is not allowed in this module
  --> src/item_type/mod.rs:23:1
   |
23 | / pub mod nested {
...  |
26 | | } 
   | |_^
   |
   = help: Consider moving this item to a different module
   = note: Applied by cargo-pup rule 'module_lint'.

warning: Wildcard imports are not allowed
 --> src/module_usage/mod.rs:3:1
  |
3 | use std::io::*;
  | ^^^^^^^^^^^^^^^
  |
  = help: Import specific items instead of using a wildcard
  = note: Applied by cargo-pup rule 'module_lint'.
  = note: `#[warn(module_wildcard_import_lint)]` on by default

warning: Use of module 'std::collections::HashMap' is denied
 --> src/module_usage/mod.rs:1:1
  |
1 | use std::collections::HashMap;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: Remove this import
  = note: Applied by cargo-pup rule 'module_lint'.
  = note: `#[warn(module_restrict_imports_lint)]` on by default

DEBUG: Checking MustBeEmpty on 'test_app::must_be_empty'. Matches? true
warning: Module must be empty
 --> src/main.rs:8:1
  |
8 | mod must_be_empty;
  | ^^^^^^^^^^^^^^^^^^
  |
  = help: Remove all content from this module
  = note: Applied by cargo-pup rule 'module_lint'.
  = note: `#[warn(module_must_be_empty_lint)]` on by default

warning: Error type 'i32' in Result does not implement Error trait
  --> src/result_error/mod.rs:14:1
   |
14 | pub fn bad_result() -> Result<String, i32> {
   | ^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'function_lint'.

warning: Error type 'result_error::CustomError' in Result does not implement Error trait
  --> src/result_error/mod.rs:23:1
   |
23 | pub fn custom_error_result() -> Result<String, CustomError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'function_lint'.

warning: Error type 'i32' in Result does not implement Error trait
  --> src/result_error/mod.rs:72:1
   |
72 | pub fn bad_anyhow_usage() -> Result<String, i32> {
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Consider implementing the Error trait for this type or using a type that already implements it
   = note: Applied by cargo-pup rule 'function_lint'.

warning: Struct must match pattern '.*MyTraitImpl$', found 'MyBadlyNamedThing'
  --> src/trait_impl/mod.rs:15:1
   |
15 | pub struct MyBadlyNamedThing {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Rename this struct to match the pattern '.*MyTraitImpl$'
   = note: Applied by cargo-pup rule 'struct_lint'.
   = note: `#[warn(struct_lint_must_be_named)]` on by default

warning: Struct 'MyBadlyNamedThing' is public, but must be private
  --> src/trait_impl/mod.rs:15:1
   |
15 | pub struct MyBadlyNamedThing {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Remove the 'pub' visibility modifier
   = note: Applied by cargo-pup rule 'struct_lint'.
   = note: `#[warn(struct_lint_must_be_private)]` on by default

warning: `test_app` (bin "test_app") generated 15 warnings
